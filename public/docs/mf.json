{
  "name" : "Matrix Factorization",
  "cells" : [ {
    "id" : 0,
    "compiler" : "scala",
    "input" : {
      "code" : "import uwxerox.logicmf.matrix._\nimport uwxerox.logicmf._\nimport uwxerox.logicmf.Data.RelationType\nimport uwxerox.logicmf.SGDConfig\n\nimplicit val rand = new scala.util.Random(0)\nval K = 2\nval N = 20\nval logistic = false\nval ents = (0 until N).toList\nval rel = RelDefinition(\"Sequential\", List(\"P\", \"P\"), RelationType.query,\n  // true values, defined for all cells\n  es => {\n    val oi = es(0).drop(1).toInt\n    val oj = es(1).drop(1).toInt\n    oi == oj || oi + 1 == oj || oi + 2 == oj\n  },\n  // isTrain: training if Some(true), test if Some(false), missing if None\n  es => {\n    val oi = es(0).drop(1).toInt\n    val oj = es(1).drop(1).toInt\n    Some(!Set(2 -> 3, 5 -> 6, 8 -> 9, 11 -> 12, 14 -> 15, 17 -> 18,\n      2 -> 6, 5 -> 9, 8 -> 12, 11 -> 15, 14 -> 18,\n      5 -> 3, 8 -> 6, 11 -> 9, 14 -> 12, 17 -> 15).contains(oi -> oj))\n  })\nrel\nval exp = new MatrixExperiment(K, Seq(rel), Map(\"P\" -> ents.map(\"p\" + _)), logistic)\nexp.initMap\nexp.initData\nHTML.data(rel.r, exp.trainingData, exp.map, false)",
      "outputFormat" : "html",
      "extraFields" : { }
    }
  }, {
    "id" : 1,
    "compiler" : "scala",
    "input" : {
      "code" : "exp.train(SGDConfig(10000, lambda = 0.1, observedRelWeight = 1.0, learningRate = 0.1))\n\"Train:\\n\" + exp.evalTrain().mkString(\"\\t\", \"\\n\\t\", \"\\n\") + \"\\n\" +\n\"Test:\\n\" + exp.evalTest().mkString(\"\\t\", \"\\n\\t\", \"\\n\")",
      "outputFormat" : "html",
      "extraFields" : { }
    }
  }, {
    "id" : 2,
    "compiler" : "scala",
    "input" : {
      "code" : "val data = new Data\ndata.addCells(exp.trainingData.cells)\ndata.addCells(exp.testData.cells)\ndata\nval pred = exp.emb.predict(data, true)\nHTML.data(rel.r, pred, exp.map, false)",
      "outputFormat" : "html",
      "extraFields" : { }
    }
  }, {
    "id" : 3,
    "compiler" : "scala",
    "input" : {
      "code" : "HTML.embedding(\"P\", exp.emb)",
      "outputFormat" : "html",
      "extraFields" : { }
    }
  } ],
  "config" : { }
}
