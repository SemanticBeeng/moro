{
  "name" : "Moro Overview",
  "cells" : [ {
    "id" : 0,
    "compiler" : "section",
    "input" : {
      "sessionId" : null,
      "code" : "headings",
      "extraFields" : { },
      "outputFormat" : "<h5 id=\"headings\" class=\"section\"><a href=\"#headings\" class=\"muted\"><small>#headings</small></a></h5>\n<hr>"
    }
  }, {
    "id" : 1,
    "compiler" : "heading1",
    "input" : {
      "sessionId" : null,
      "code" : "Heading",
      "extraFields" : { },
      "outputFormat" : "<h1>Heading</h1>"
    }
  }, {
    "id" : 2,
    "compiler" : "heading2",
    "input" : {
      "sessionId" : null,
      "code" : "Heading",
      "extraFields" : {
        "fragment" : "true"
      },
      "outputFormat" : "<h2>Heading</h2>"
    }
  }, {
    "id" : 3,
    "compiler" : "heading3",
    "input" : {
      "sessionId" : null,
      "code" : "Heading",
      "extraFields" : {
        "fragment" : "true"
      },
      "outputFormat" : "<h3>Heading</h3>"
    }
  }, {
    "id" : 4,
    "compiler" : "heading4",
    "input" : {
      "sessionId" : null,
      "code" : "Heading",
      "extraFields" : {
        "fragment" : "true"
      },
      "outputFormat" : "<h4>Heading</h4>"
    }
  }, {
    "id" : 5,
    "compiler" : "heading5",
    "input" : {
      "sessionId" : null,
      "code" : "Heading",
      "extraFields" : {
        "fragment" : "true"
      },
      "outputFormat" : "<h5>Heading</h5>"
    }
  }, {
    "id" : 6,
    "compiler" : "section",
    "input" : {
      "sessionId" : null,
      "code" : "markdown",
      "extraFields" : { },
      "outputFormat" : "<h5 id=\"markdown\" class=\"section\"><a href=\"#markdown\" class=\"muted\"><small>#markdown</small></a></h5>\n<hr>"
    }
  }, {
    "id" : 7,
    "compiler" : "markdown",
    "input" : {
      "sessionId" : null,
      "code" : "### Markdown!\n\nThis notebook can support all markdown features, such as **bold**, _italics_, [links](http://sameersingh.org/), `code`, etc.\n\nAnd the equations can be inlined if definining \\\\(\\theta\\\\) and \\\\(\\pi\\\\) in text.\n\nAlso, editable code block without any output.",
      "extraFields" : { },
      "outputFormat" : "<h3>Markdown!</h3><p>This notebook can support all markdown features, such as <strong>bold</strong>, <em>italics</em>, <a href=\"http://sameersingh.org/\">links</a>, <code>code</code>, etc.</p><p>And the equations can be inlined if definining <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"MathJax\" id=\"MathJax-Element-2-Frame\"><nobr><span class=\"math\" id=\"MathJax-Span-3\" role=\"math\" style=\"width: 0.658em; display: inline-block;\"><span style=\"display: inline-block; position: relative; width: 0.539em; height: 0px; font-size: 120%;\"><span style=\"position: absolute; clip: rect(1.729em 1000.003em 2.741em -999.997em); top: -2.557em; left: 0.003em;\"><span class=\"mrow\" id=\"MathJax-Span-4\"><span class=\"mi\" id=\"MathJax-Span-5\" style=\"font-family: STIXGeneral-Italic;\">θ<span style=\"display: inline-block; overflow: hidden; height: 1px; width: 0.003em;\"></span></span></span><span style=\"display: inline-block; width: 0px; height: 2.562em;\"></span></span></span><span style=\"border-left-width: 0.004em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.004em; vertical-align: -0.068em;\"></span></span></nobr></span><script type=\"math/tex\" id=\"MathJax-Element-2\">\\theta</script> and <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"MathJax\" id=\"MathJax-Element-3-Frame\"><nobr><span class=\"math\" id=\"MathJax-Span-6\" role=\"math\" style=\"width: 0.717em; display: inline-block;\"><span style=\"display: inline-block; position: relative; width: 0.598em; height: 0px; font-size: 120%;\"><span style=\"position: absolute; clip: rect(1.967em 1000.003em 2.741em -999.997em); top: -2.557em; left: 0.003em;\"><span class=\"mrow\" id=\"MathJax-Span-7\"><span class=\"mi\" id=\"MathJax-Span-8\" style=\"font-family: STIXGeneral-Italic;\">π<span style=\"display: inline-block; overflow: hidden; height: 1px; width: 0.063em;\"></span></span></span><span style=\"display: inline-block; width: 0px; height: 2.562em;\"></span></span></span><span style=\"border-left-width: 0.004em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 0.646em; vertical-align: -0.068em;\"></span></span></nobr></span><script type=\"math/tex\" id=\"MathJax-Element-3\">\\pi</script> in text.</p><p>Also, editable code block without any output.</p>"
    }
  }, {
    "id" : 8,
    "compiler" : "scala",
    "input" : {
      "sessionId" : null,
      "code" : "def f(x: Int) = x*x\nf(1)",
      "extraFields" : {
        "hide_output" : "true",
        "aggregatedCells" : "[]"
      },
      "outputFormat" : ""
    }
  }, {
    "id" : 9,
    "compiler" : "section",
    "input" : {
      "sessionId" : null,
      "code" : "latex",
      "extraFields" : { },
      "outputFormat" : "<h5 id=\"latex\" class=\"section\"><a href=\"#latex\" class=\"muted\"><small>#latex</small></a></h5>\n<hr>"
    }
  }, {
    "id" : 10,
    "compiler" : "heading3",
    "input" : {
      "sessionId" : null,
      "code" : "Latex",
      "extraFields" : { },
      "outputFormat" : "<h3>Latex</h3>"
    }
  }, {
    "id" : 11,
    "compiler" : "latex",
    "input" : {
      "sessionId" : null,
      "code" : "\\begin{equation}\n\\alpha+\\beta=\\sum_{i=0}^{n}\\gamma\\cfrac{1}{\\mathcal{Z}} \\label{eq1}\n\\end{equation}",
      "extraFields" : {
        "fragment" : "true"
      },
      "outputFormat" : "<span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><div class=\"MathJax_Display\"><span class=\"MathJax\" id=\"MathJax-Element-4-Frame\"><nobr><span class=\"math\" id=\"MathJax-Span-9\" role=\"math\" style=\"width: 100%; display: inline-block; min-width: 10.42em;\"><span style=\"display: inline-block; position: relative; width: 100%; height: 0px; font-size: 120%; min-width: 10.42em;\"><span style=\"position: absolute; clip: rect(2.146em 1000.003em 5.598em -999.997em); top: -4.104em; left: 0.003em; width: 100%;\"><span class=\"mrow\" id=\"MathJax-Span-10\"><span class=\"mtable\" id=\"MathJax-Span-11\" style=\"min-width: 12.503em;\"><span style=\"display: inline-block; position: relative; width: 100%; height: 0px; min-width: 10.42em;\"><span style=\"display: inline-block; position: absolute; width: 6.551em; height: 0px; clip: rect(-1.961em 1000.003em 1.491em -999.997em); top: 0.003em; left: 50%; margin-left: -3.271em;\"><span style=\"position: absolute; clip: rect(2.146em 1000.003em 5.598em -999.997em); top: -4.104em; left: 0.003em;\"><span style=\"display: inline-block; position: relative; width: 6.551em; height: 0px;\"><span style=\"position: absolute; clip: rect(2.146em 1000.003em 5.598em -999.997em); top: -4.104em; left: 50%; margin-left: -3.271em;\"><span class=\"mtd\" id=\"MathJax-Span-15\"><span class=\"mrow\" id=\"MathJax-Span-16\"><span class=\"mi\" id=\"MathJax-Span-17\" style=\"font-family: STIXGeneral-Italic;\">α</span><span class=\"mo\" id=\"MathJax-Span-18\" style=\"font-family: STIXGeneral-Regular; padding-left: 0.241em;\">+</span><span class=\"mi\" id=\"MathJax-Span-19\" style=\"font-family: STIXGeneral-Italic; padding-left: 0.241em;\">β<span style=\"display: inline-block; overflow: hidden; height: 1px; width: 0.003em;\"></span></span><span class=\"mo\" id=\"MathJax-Span-20\" style=\"font-family: STIXGeneral-Regular; padding-left: 0.301em;\">=</span><span class=\"munderover\" id=\"MathJax-Span-21\" style=\"padding-left: 0.301em;\"><span style=\"display: inline-block; position: relative; width: 1.313em; height: 0px;\"><span style=\"position: absolute; clip: rect(2.86em 1000.003em 4.646em -999.997em); top: -3.985em; left: 0.003em;\"><span class=\"mo\" id=\"MathJax-Span-22\" style=\"font-family: STIXSizeOneSym; vertical-align: -0.533em;\">∑</span><span style=\"display: inline-block; width: 0px; height: 3.991em;\"></span></span><span style=\"position: absolute; clip: rect(3.336em 1000.003em 4.289em -999.997em); top: -2.854em; left: 0.122em;\"><span class=\"texatom\" id=\"MathJax-Span-23\"><span class=\"mrow\" id=\"MathJax-Span-24\"><span class=\"mi\" id=\"MathJax-Span-25\" style=\"font-size: 70.7%; font-family: STIXGeneral-Italic;\">i</span><span class=\"mo\" id=\"MathJax-Span-26\" style=\"font-size: 70.7%; font-family: STIXGeneral-Regular;\">=</span><span class=\"mn\" id=\"MathJax-Span-27\" style=\"font-size: 70.7%; font-family: STIXGeneral-Regular;\">0</span></span></span><span style=\"display: inline-block; width: 0px; height: 3.991em;\"></span></span><span style=\"position: absolute; clip: rect(3.396em 1000.003em 4.17em -999.997em); top: -5.176em; left: 0.479em;\"><span class=\"texatom\" id=\"MathJax-Span-28\"><span class=\"mrow\" id=\"MathJax-Span-29\"><span class=\"mi\" id=\"MathJax-Span-30\" style=\"font-size: 70.7%; font-family: STIXGeneral-Italic;\">n</span></span></span><span style=\"display: inline-block; width: 0px; height: 3.991em;\"></span></span></span></span><span class=\"mi\" id=\"MathJax-Span-31\" style=\"font-family: STIXGeneral-Italic; padding-left: 0.182em;\">γ<span style=\"display: inline-block; overflow: hidden; height: 1px; width: 0.003em;\"></span></span><span class=\"mfrac\" id=\"MathJax-Span-32\"><span style=\"display: inline-block; position: relative; width: 0.896em; height: 0px; margin-right: 0.122em; margin-left: 0.122em;\"><span style=\"position: absolute; clip: rect(2.86em 1000.003em 4.527em -999.997em); top: -4.818em; left: 50%; margin-left: -0.235em;\"><span class=\"mrow\" id=\"MathJax-Span-33\"><span class=\"mpadded\" id=\"MathJax-Span-34\"><span style=\"display: inline-block; position: relative; width: 0.003em; height: 0px;\"><span style=\"position: absolute; clip: rect(3.812em 1000.003em 4.17em -999.997em); top: -3.985em; left: 0.003em;\"><span class=\"mrow\" id=\"MathJax-Span-35\"><span class=\"mrow\" id=\"MathJax-Span-36\"></span></span><span style=\"display: inline-block; width: 0px; height: 3.991em;\"></span></span></span></span><span class=\"mstyle\" id=\"MathJax-Span-37\"><span class=\"mrow\" id=\"MathJax-Span-38\"><span class=\"texatom\" id=\"MathJax-Span-39\"><span class=\"mrow\" id=\"MathJax-Span-40\"><span class=\"mn\" id=\"MathJax-Span-41\" style=\"font-family: STIXGeneral-Regular;\">1</span></span></span></span></span></span><span style=\"display: inline-block; width: 0px; height: 3.991em;\"></span></span><span style=\"position: absolute; clip: rect(2.86em 1000.003em 4.527em -999.997em); top: -3.033em; left: 50%; margin-left: -0.354em;\"><span class=\"mrow\" id=\"MathJax-Span-42\"><span class=\"mpadded\" id=\"MathJax-Span-43\"><span style=\"display: inline-block; position: relative; width: 0.003em; height: 0px;\"><span style=\"position: absolute; clip: rect(3.812em 1000.003em 4.17em -999.997em); top: -3.985em; left: 0.003em;\"><span class=\"mrow\" id=\"MathJax-Span-44\"><span class=\"mrow\" id=\"MathJax-Span-45\"></span></span><span style=\"display: inline-block; width: 0px; height: 3.991em;\"></span></span></span></span><span class=\"mstyle\" id=\"MathJax-Span-46\"><span class=\"mrow\" id=\"MathJax-Span-47\"><span class=\"texatom\" id=\"MathJax-Span-48\"><span class=\"mrow\" id=\"MathJax-Span-49\"><span class=\"texatom\" id=\"MathJax-Span-50\"><span class=\"mrow\" id=\"MathJax-Span-51\"><span class=\"mi\" id=\"MathJax-Span-52\" style=\"font-family: STIXNonUnicode-Italic;\"></span></span></span></span></span></span></span></span><span style=\"display: inline-block; width: 0px; height: 3.991em;\"></span></span><span style=\"position: absolute; clip: rect(0.836em 1000.003em 1.253em -999.997em); top: -1.307em; left: 0.003em;\"><span style=\"border-left-width: 0.896em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.25px; vertical-align: 0.003em;\"></span><span style=\"display: inline-block; width: 0px; height: 1.074em;\"></span></span></span></span></span></span><span style=\"display: inline-block; width: 0px; height: 4.11em;\"></span></span></span><span style=\"display: inline-block; width: 0px; height: 4.11em;\"></span></span></span><span style=\"display: inline-block; position: absolute; width: 1.193em; height: 0px; clip: rect(-0.83em 1000.003em 0.36em -999.997em); top: 0.003em; right: 0.003em; margin-left: 0.896em; margin-right: 0.896em;\"><span style=\"position: absolute; clip: rect(3.158em 1000.003em 4.348em -999.997em); top: -3.985em; right: 0.003em;\"><span class=\"mtd\" id=\"mjx-eqn-eq1\"><span class=\"mrow\" id=\"MathJax-Span-13\"><span class=\"mtext\" id=\"MathJax-Span-14\" style=\"font-family: STIXGeneral-Regular;\">(1)</span></span></span><span style=\"display: inline-block; width: 0px; height: 3.991em;\"></span></span></span></span></span></span><span style=\"display: inline-block; width: 0px; height: 4.11em;\"></span></span></span><span style=\"border-left-width: 0.004em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 3.861em; vertical-align: -1.639em;\"></span></span></nobr></span></div><script type=\"math/tex; mode=display\" id=\"MathJax-Element-4\">\\begin{equation}\n\\alpha+\\beta=\\sum_{i=0}^{n}\\gamma\\cfrac{1}{\\mathcal{Z}} \\label{eq1}\n\\end{equation}</script>"
    }
  }, {
    "id" : 12,
    "compiler" : "markdown",
    "input" : {
      "sessionId" : null,
      "code" : "You can refer to equations too, like Equation \\\\(\\ref{eq1}\\\\).",
      "extraFields" : { },
      "outputFormat" : "<p>You can refer to equations too, like Equation <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"MathJax\" id=\"MathJax-Element-5-Frame\"><nobr><span class=\"math\" id=\"MathJax-Span-53\" role=\"math\" style=\"width: 0.658em; display: inline-block;\"><span style=\"display: inline-block; position: relative; width: 0.539em; height: 0px; font-size: 120%;\"><span style=\"position: absolute; clip: rect(1.729em 1000.003em 2.741em -999.997em); top: -2.557em; left: 0.003em;\"><span class=\"mrow\" id=\"MathJax-Span-54\"><a href=\"#mjx-eqn-eq1\"><span class=\"mrow MathJax_ref\" id=\"MathJax-Span-55\"><span class=\"mtext\" id=\"MathJax-Span-56\" style=\"font-family: STIXGeneral-Regular;\">1</span></span></a></span><span style=\"display: inline-block; width: 0px; height: 2.562em;\"></span></span></span><span style=\"border-left-width: 0.004em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 0.932em; vertical-align: -0.068em;\"></span></span></nobr></span><script type=\"math/tex\" id=\"MathJax-Element-5\">\\ref{eq1}</script>.</p>"
    }
  }, {
    "id" : 13,
    "compiler" : "section",
    "input" : {
      "sessionId" : null,
      "code" : "images",
      "extraFields" : { },
      "outputFormat" : "<h5 id=\"images\" class=\"section\"><a href=\"#images\" class=\"muted\"><small>#images</small></a></h5>\n<hr>"
    }
  }, {
    "id" : 14,
    "compiler" : "heading3",
    "input" : {
      "sessionId" : null,
      "code" : "Images",
      "extraFields" : { },
      "outputFormat" : "<h3>Images</h3>"
    }
  }, {
    "id" : 15,
    "compiler" : "imageurl",
    "input" : {
      "sessionId" : null,
      "code" : "http://1.bp.blogspot.com/-1Ub3QovBjkM/UUYRy5t-53I/AAAAAAAACr4/PUpU70GJaJ0/s1600/Princess+mononoke+photos1.jpg",
      "extraFields" : {
        "fragment" : "true"
      },
      "outputFormat" : "<img src=\"http://1.bp.blogspot.com/-1Ub3QovBjkM/UUYRy5t-53I/AAAAAAAACr4/PUpU70GJaJ0/s1600/Princess+mononoke+photos1.jpg\" class=\"img-thumbnail displayed\">"
    }
  }, {
    "id" : 16,
    "compiler" : "section",
    "input" : {
      "sessionId" : null,
      "code" : "scala",
      "extraFields" : { },
      "outputFormat" : "<h5 id=\"scala\" class=\"section\"><a href=\"#scala\" class=\"muted\"><small>#scala</small></a></h5>\n<hr>"
    }
  }, {
    "id" : 17,
    "compiler" : "heading3",
    "input" : {
      "sessionId" : null,
      "code" : "Interactive Scala!",
      "extraFields" : { },
      "outputFormat" : "<h3>Interactive Scala!</h3>"
    }
  }, {
    "id" : 18,
    "compiler" : "markdown",
    "input" : {
      "sessionId" : null,
      "code" : "Moro supports the Scala REPL: write, compile, and run!",
      "extraFields" : { },
      "outputFormat" : "<p>Moro supports the Scala REPL: write, compile, and run!</p>"
    }
  }, {
    "id" : 19,
    "compiler" : "scala",
    "input" : {
      "sessionId" : null,
      "code" : "f(10)",
      "extraFields" : {
        "fragment" : "true",
        "aggregatedCells" : "[\"def f(x: Int) = x*x\\nf(1)\"]"
      },
      "outputFormat" : "<div class=\"string-result\"><span class=\"asString String\">100</span></div>"
    }
  }, {
    "id" : 20,
    "compiler" : "section",
    "input" : {
      "sessionId" : null,
      "code" : "scala2",
      "extraFields" : { },
      "outputFormat" : "<h5 id=\"scala2\" class=\"section\"><a href=\"#scala2\" class=\"muted\"><small>#scala2</small></a></h5>\n<hr>"
    }
  }, {
    "id" : 21,
    "compiler" : "scala",
    "input" : {
      "sessionId" : null,
      "code" : "def f2(x:Int) = x + x\nMap(10 -> \"ten\", 100 -> \"hundred\")",
      "extraFields" : {
        "fragment" : "true",
        "aggregatedCells" : "[\"def f(x: Int) = x*x\\nf(1)\",\"f(10)\"]"
      },
      "outputFormat" : "<div class=\"string-result\"><div class=\"asMap Map\"><span class=\"typeName\">Map</span>\n<ul class=\"fields\">\n  <li class=\"field\"><span class=\"fieldName\"><span class=\"asString String\">10</span></span> <span class=\"fieldValue\"><span class=\"asString String\">ten</span></span></li>\n  <li class=\"field\"><span class=\"fieldName\"><span class=\"asString String\">100</span></span> <span class=\"fieldValue\"><span class=\"asString String\">hundred</span></span></li>\n</ul>\n</div></div>"
    }
  }, {
    "id" : 22,
    "compiler" : "section",
    "input" : {
      "sessionId" : null,
      "code" : "matrix",
      "extraFields" : { },
      "outputFormat" : "<h5 id=\"matrix\" class=\"section\"><a href=\"#matrix\" class=\"muted\"><small>#matrix</small></a></h5>\n<hr>"
    }
  }, {
    "id" : 23,
    "compiler" : "heading2",
    "input" : {
      "sessionId" : null,
      "code" : "Matrices as Images",
      "extraFields" : { },
      "outputFormat" : "<h2>Matrices as Images</h2>"
    }
  }, {
    "id" : 24,
    "compiler" : "scala",
    "input" : {
      "sessionId" : null,
      "code" : "// Matrices!\nval random = new scala.util.Random()\nMatrix((0 until 10).map(i => (0 until 10).map(j => (i+j)+2*random.nextDouble())))",
      "extraFields" : {
        "fragment" : "true",
        "aggregatedCells" : "[\"def f(x: Int) = x*x\\nf(1)\",\"f(10)\",\"def f2(x:Int) = x + x\\nMap(10 -> \\\"ten\\\", 100 -> \\\"hundred\\\")\"]"
      },
      "outputFormat" : "<div class=\"string-result\"><table class=\"matrix\">\n  <thead>\n  </thead>\n  <tbody>\n  <tr class=\"matrixRow\">\n    <td class=\"matrixCell\" style=\"opacity:0.000000\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.015615\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.035729\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.143984\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.212291\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.243391\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.261887\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.314219\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.391231\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.527161\"></td>\n  </tr>\n  <tr class=\"matrixRow\">\n    <td class=\"matrixCell\" style=\"opacity:0.002612\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.043656\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.123406\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.215739\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.257861\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.280461\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.368082\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.449416\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.436473\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.561917\"></td>\n  </tr>\n  <tr class=\"matrixRow\">\n    <td class=\"matrixCell\" style=\"opacity:0.064727\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.179711\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.252297\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.204531\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.279583\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.329001\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.418256\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.448844\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.561710\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.653066\"></td>\n  </tr>\n  <tr class=\"matrixRow\">\n    <td class=\"matrixCell\" style=\"opacity:0.187994\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.148635\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.272890\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.275186\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.390797\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.440256\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.486590\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.584504\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.622641\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.616891\"></td>\n  </tr>\n  <tr class=\"matrixRow\">\n    <td class=\"matrixCell\" style=\"opacity:0.169600\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.297591\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.302398\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.319207\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.435337\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.434467\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.493359\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.568542\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.672769\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.723676\"></td>\n  </tr>\n  <tr class=\"matrixRow\">\n    <td class=\"matrixCell\" style=\"opacity:0.311138\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.308456\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.412411\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.391517\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.441427\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.540286\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.553860\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.625106\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.724858\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.722850\"></td>\n  </tr>\n  <tr class=\"matrixRow\">\n    <td class=\"matrixCell\" style=\"opacity:0.352445\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.384992\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.430290\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.492053\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.528007\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.635772\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.689133\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.743164\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.804616\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.861430\"></td>\n  </tr>\n  <tr class=\"matrixRow\">\n    <td class=\"matrixCell\" style=\"opacity:0.368812\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.448274\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.510404\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.602144\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.547096\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.712396\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.666699\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.747401\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.780326\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.920385\"></td>\n  </tr>\n  <tr class=\"matrixRow\">\n    <td class=\"matrixCell\" style=\"opacity:0.435642\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.496352\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.597066\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.625622\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.702690\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.751230\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.821305\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.827541\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.927347\"></td>\n    <td class=\"matrixCell\" style=\"opacity:1.000000\"></td>\n  </tr>\n  <tr class=\"matrixRow\">\n    <td class=\"matrixCell\" style=\"opacity:0.528313\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.559966\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.604484\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.703851\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.694266\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.724370\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.836735\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.897988\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.919384\"></td>\n    <td class=\"matrixCell\" style=\"opacity:0.981100\"></td>\n  </tr>\n  </tbody>\n</table></div>"
    }
  }, {
    "id" : 25,
    "compiler" : "section",
    "input" : {
      "sessionId" : null,
      "code" : "vectors",
      "extraFields" : { },
      "outputFormat" : "<h5 id=\"vectors\" class=\"section\"><a href=\"#vectors\" class=\"muted\"><small>#vectors</small></a></h5>\n<hr>"
    }
  }, {
    "id" : 26,
    "compiler" : "markdown",
    "input" : {
      "sessionId" : null,
      "code" : "## Vectors",
      "extraFields" : { },
      "outputFormat" : "<h2>Vectors</h2>"
    }
  }, {
    "id" : 27,
    "compiler" : "scala",
    "input" : {
      "sessionId" : null,
      "code" : "// Vectors\nval means = Seq(Seq.fill(10)(-10.0), Seq.fill(10)(10.0))\nval vectors = org.sameersingh.htmlgen.Custom.Vectors(\n  means.zipWithIndex.map(xi => (0 until 10).map(j => (xi._2, xi._2 + \"_\" + j, xi._1.map(v => v + random.nextGaussian() * 0.1)))).flatten\n)\norg.sameersingh.htmlgen.D3jsConverter.convert(vectors)",
      "extraFields" : {
        "fragment" : "true",
        "aggregatedCells" : "[\"def f(x: Int) = x*x\\nf(1)\",\"f(10)\",\"def f2(x:Int) = x + x\\nMap(10 -> \\\"ten\\\", 100 -> \\\"hundred\\\")\",\"// Matrices!\\nval random = new scala.util.Random()\\nMatrix((0 until 10).map(i => (0 until 10).map(j => (i+j)+2*random.nextDouble())))\"]"
      },
      "outputFormat" : "<div class=\"string-result\"><div id=\"vectorsDivf9092ef0-e007-4412-805f-0532b6efdbc3\"><svg width=\"600\" height=\"450\"><g transform=\"translate(0,0)\"><rect width=\"600\" height=\"450\" style=\"fill: none; pointer-events: all;\"></rect><g><g class=\"nodes\"><g class=\"node\"><circle r=\"5\" cx=\"431.70851597461746\" cy=\"171.90394589808145\" fill=\"#1f77b4\" class=\"nodeGroup0\"><title>\"0_0\"</title></circle><text x=\"431.70851597461746\" y=\"171.90394589808145\" class=\"nodeGroup0\" font-family=\"Bree Serif\" font-size=\"1em\">\"0_0\"</text></g><g class=\"node\"><circle r=\"5\" cx=\"376.20047000805965\" cy=\"235.86952109065138\" fill=\"#1f77b4\" class=\"nodeGroup0\"><title>\"0_1\"</title></circle><text x=\"376.20047000805965\" y=\"235.86952109065138\" class=\"nodeGroup0\" font-family=\"Bree Serif\" font-size=\"1em\">\"0_1\"</text></g><g class=\"node\"><circle r=\"5\" cx=\"479.15747556941125\" cy=\"333.79333488808\" fill=\"#1f77b4\" class=\"nodeGroup0\"><title>\"0_2\"</title></circle><text x=\"479.15747556941125\" y=\"333.79333488808\" class=\"nodeGroup0\" font-family=\"Bree Serif\" font-size=\"1em\">\"0_2\"</text></g><g class=\"node\"><circle r=\"5\" cx=\"310.41278883709714\" cy=\"164.38063136881388\" fill=\"#1f77b4\" class=\"nodeGroup0\"><title>\"0_3\"</title></circle><text x=\"310.41278883709714\" y=\"164.38063136881388\" class=\"nodeGroup0\" font-family=\"Bree Serif\" font-size=\"1em\">\"0_3\"</text></g><g class=\"node\"><circle r=\"5\" cx=\"324.2960217875421\" cy=\"213.41831708438957\" fill=\"#1f77b4\" class=\"nodeGroup0\"><title>\"0_4\"</title></circle><text x=\"324.2960217875421\" y=\"213.41831708438957\" class=\"nodeGroup0\" font-family=\"Bree Serif\" font-size=\"1em\">\"0_4\"</text></g><g class=\"node\"><circle r=\"5\" cx=\"350.21523592234905\" cy=\"191.9384162098478\" fill=\"#1f77b4\" class=\"nodeGroup0\"><title>\"0_5\"</title></circle><text x=\"350.21523592234905\" y=\"191.9384162098478\" class=\"nodeGroup0\" font-family=\"Bree Serif\" font-size=\"1em\">\"0_5\"</text></g><g class=\"node\"><circle r=\"5\" cx=\"467.8130391094219\" cy=\"230.14734154000473\" fill=\"#1f77b4\" class=\"nodeGroup0\"><title>\"0_6\"</title></circle><text x=\"467.8130391094219\" y=\"230.14734154000473\" class=\"nodeGroup0\" font-family=\"Bree Serif\" font-size=\"1em\">\"0_6\"</text></g><g class=\"node\"><circle r=\"5\" cx=\"50\" cy=\"182.5223824707839\" fill=\"#1f77b4\" class=\"nodeGroup0\"><title>\"0_7\"</title></circle><text x=\"50\" y=\"182.5223824707839\" class=\"nodeGroup0\" font-family=\"Bree Serif\" font-size=\"1em\">\"0_7\"</text></g><g class=\"node\"><circle r=\"5\" cx=\"434.4818074353534\" cy=\"226.1404771506168\" fill=\"#1f77b4\" class=\"nodeGroup0\"><title>\"0_8\"</title></circle><text x=\"434.4818074353534\" y=\"226.1404771506168\" class=\"nodeGroup0\" font-family=\"Bree Serif\" font-size=\"1em\">\"0_8\"</text></g><g class=\"node\"><circle r=\"5\" cx=\"421.8486153517111\" cy=\"255.5038402418871\" fill=\"#1f77b4\" class=\"nodeGroup0\"><title>\"0_9\"</title></circle><text x=\"421.8486153517111\" y=\"255.5038402418871\" class=\"nodeGroup0\" font-family=\"Bree Serif\" font-size=\"1em\">\"0_9\"</text></g><g class=\"node\"><circle r=\"5\" cx=\"550\" cy=\"112.66403820002657\" fill=\"#ff7f0e\" class=\"nodeGroup1\"><title>\"1_0\"</title></circle><text x=\"550\" y=\"112.66403820002657\" class=\"nodeGroup1\" font-family=\"Bree Serif\" font-size=\"1em\">\"1_0\"</text></g><g class=\"node\"><circle r=\"5\" cx=\"216.4411659947172\" cy=\"184.92467928331126\" fill=\"#ff7f0e\" class=\"nodeGroup1\"><title>\"1_1\"</title></circle><text x=\"216.4411659947172\" y=\"184.92467928331126\" class=\"nodeGroup1\" font-family=\"Bree Serif\" font-size=\"1em\">\"1_1\"</text></g><g class=\"node\"><circle r=\"5\" cx=\"390.6070046016238\" cy=\"198.030786253451\" fill=\"#ff7f0e\" class=\"nodeGroup1\"><title>\"1_2\"</title></circle><text x=\"390.6070046016238\" y=\"198.030786253451\" class=\"nodeGroup1\" font-family=\"Bree Serif\" font-size=\"1em\">\"1_2\"</text></g><g class=\"node\"><circle r=\"5\" cx=\"61.93690543370054\" cy=\"217.14483823608475\" fill=\"#ff7f0e\" class=\"nodeGroup1\"><title>\"1_3\"</title></circle><text x=\"61.93690543370054\" y=\"217.14483823608475\" class=\"nodeGroup1\" font-family=\"Bree Serif\" font-size=\"1em\">\"1_3\"</text></g><g class=\"node\"><circle r=\"5\" cx=\"433.2426621595489\" cy=\"400\" fill=\"#ff7f0e\" class=\"nodeGroup1\"><title>\"1_4\"</title></circle><text x=\"433.2426621595489\" y=\"400\" class=\"nodeGroup1\" font-family=\"Bree Serif\" font-size=\"1em\">\"1_4\"</text></g><g class=\"node\"><circle r=\"5\" cx=\"522.2338550710247\" cy=\"163.13298114018\" fill=\"#ff7f0e\" class=\"nodeGroup1\"><title>\"1_5\"</title></circle><text x=\"522.2338550710247\" y=\"163.13298114018\" class=\"nodeGroup1\" font-family=\"Bree Serif\" font-size=\"1em\">\"1_5\"</text></g><g class=\"node\"><circle r=\"5\" cx=\"451.97526231204716\" cy=\"286.3785101246659\" fill=\"#ff7f0e\" class=\"nodeGroup1\"><title>\"1_6\"</title></circle><text x=\"451.97526231204716\" y=\"286.3785101246659\" class=\"nodeGroup1\" font-family=\"Bree Serif\" font-size=\"1em\">\"1_6\"</text></g><g class=\"node\"><circle r=\"5\" cx=\"537.1865028054467\" cy=\"50\" fill=\"#ff7f0e\" class=\"nodeGroup1\"><title>\"1_7\"</title></circle><text x=\"537.1865028054467\" y=\"50\" class=\"nodeGroup1\" font-family=\"Bree Serif\" font-size=\"1em\">\"1_7\"</text></g><g class=\"node\"><circle r=\"5\" cx=\"391.85854950118204\" cy=\"332.82465268285836\" fill=\"#ff7f0e\" class=\"nodeGroup1\"><title>\"1_8\"</title></circle><text x=\"391.85854950118204\" y=\"332.82465268285836\" class=\"nodeGroup1\" font-family=\"Bree Serif\" font-size=\"1em\">\"1_8\"</text></g><g class=\"node\"><circle r=\"5\" cx=\"463.14881284288964\" cy=\"90.14212516803542\" fill=\"#ff7f0e\" class=\"nodeGroup1\"><title>\"1_9\"</title></circle><text x=\"463.14881284288964\" y=\"90.14212516803542\" class=\"nodeGroup1\" font-family=\"Bree Serif\" font-size=\"1em\">\"1_9\"</text></g></g></g></g></svg></div>\n\n<script type=\"text/javascript\">\n drawVectors([{\"_1\":0,\"_2\":\"0_0\",\"_3\":[0.7634170319492349,0.3482969882802327]},{\"_1\":0,\"_2\":\"0_1\",\"_3\":[0.6524009400161193,0.5310557745447182]},{\"_1\":0,\"_2\":\"0_2\",\"_3\":[0.8583149511388225,0.8108380996802285]},{\"_1\":0,\"_2\":\"0_3\",\"_3\":[0.5208255776741942,0.3268018039108968]},{\"_1\":0,\"_2\":\"0_4\",\"_3\":[0.5485920435750842,0.4669094773839702]},{\"_1\":0,\"_2\":\"0_5\",\"_3\":[0.6004304718446981,0.4055383320281365]},{\"_1\":0,\"_2\":\"0_6\",\"_3\":[0.8356260782188437,0.5147066901142993]},{\"_1\":0,\"_2\":\"0_7\",\"_3\":[0.0,0.378635378487954]},{\"_1\":0,\"_2\":\"0_8\",\"_3\":[0.7689636148707069,0.5032585061446194]},{\"_1\":0,\"_2\":\"0_9\",\"_3\":[0.7436972307034222,0.5871538292625346]},{\"_1\":1,\"_2\":\"1_0\",\"_3\":[1.0,0.17904010914293306]},{\"_1\":1,\"_2\":\"1_1\",\"_3\":[0.3328823319894344,0.3854990836666036]},{\"_1\":1,\"_2\":\"1_2\",\"_3\":[0.6812140092032477,0.42294510358128856]},{\"_1\":1,\"_2\":\"1_3\",\"_3\":[0.02387381086740108,0.4775566806745279]},{\"_1\":1,\"_2\":\"1_4\",\"_3\":[0.7664853243190978,1.0]},{\"_1\":1,\"_2\":\"1_5\",\"_3\":[0.9444677101420494,0.32323708897194287]},{\"_1\":1,\"_2\":\"1_6\",\"_3\":[0.8039505246240943,0.6753671717847597]},{\"_1\":1,\"_2\":\"1_7\",\"_3\":[0.9743730056108934,0.0]},{\"_1\":1,\"_2\":\"1_8\",\"_3\":[0.6837170990023641,0.8080704362367382]},{\"_1\":1,\"_2\":\"1_9\",\"_3\":[0.8262976256857792,0.11469178619438693]}], \"vectorsDivf9092ef0-e007-4412-805f-0532b6efdbc3\");\n</script></div>"
    }
  }, {
    "id" : 28,
    "compiler" : "section",
    "input" : {
      "sessionId" : null,
      "code" : "plots",
      "extraFields" : { },
      "outputFormat" : "<h5 id=\"plots\" class=\"section\"><a href=\"#plots\" class=\"muted\"><small>#plots</small></a></h5>\n<hr>"
    }
  }, {
    "id" : 29,
    "compiler" : "heading2",
    "input" : {
      "sessionId" : null,
      "code" : "Plots too!",
      "extraFields" : { },
      "outputFormat" : "<h2>Plots too!</h2>"
    }
  }, {
    "id" : 30,
    "compiler" : "markdown",
    "input" : {
      "sessionId" : null,
      "code" : "Using `scalaplot`, we can define simple line and bar plots.",
      "extraFields" : { },
      "outputFormat" : "<p>Using <code>scalaplot</code>, we can define simple line and bar plots.</p>"
    }
  }, {
    "id" : 31,
    "compiler" : "section",
    "input" : {
      "sessionId" : null,
      "code" : "xyplot",
      "extraFields" : { },
      "outputFormat" : "<h5 id=\"xyplot\" class=\"section\"><a href=\"#xyplot\" class=\"muted\"><small>#xyplot</small></a></h5>\n<hr>"
    }
  }, {
    "id" : 32,
    "compiler" : "scala",
    "input" : {
      "sessionId" : null,
      "code" : "val x = (0.0 to 6.28 by 0.25)\nxyChart(x -> (math.sin(_), math.cos(_)))",
      "extraFields" : {
        "fragment" : "true",
        "aggregatedCells" : "[\"def f(x: Int) = x*x\\nf(1)\",\"f(10)\",\"def f2(x:Int) = x + x\\nMap(10 -> \\\"ten\\\", 100 -> \\\"hundred\\\")\",\"// Matrices!\\nval random = new scala.util.Random()\\nMatrix((0 until 10).map(i => (0 until 10).map(j => (i+j)+2*random.nextDouble())))\",\"// Vectors\\nval means = Seq(Seq.fill(10)(-10.0), Seq.fill(10)(10.0))\\nval vectors = org.sameersingh.htmlgen.Custom.Vectors(\\n  means.zipWithIndex.map(xi => (0 until 10).map(j => (xi._2, xi._2 + \\\"_\\\" + j, xi._1.map(v => v + random.nextGaussian() * 0.1)))).flatten\\n)\\norg.sameersingh.htmlgen.D3jsConverter.convert(vectors)\"]"
      },
      "outputFormat" : "<div class=\"string-result\"><!--?xml version=\"1.0\" encoding=\"utf-8\"  standalone=\"no\"?-->\n\n<svg width=\"600\" height=\"480\" viewBox=\"0 0 600 480\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n\n<title>Gnuplot</title>\n<desc>Produced by GNUPLOT 5.0 patchlevel 0 </desc>\n\n<g id=\"gnuplot_canvas\">\n\n<rect x=\"0\" y=\"0\" width=\"600\" height=\"480\" fill=\"none\"></rect>\n<defs>\n\n\t<circle id=\"gpDot\" r=\"0.5\" stroke-width=\"0.5\"></circle>\n\t<path id=\"gpPt0\" stroke-width=\"0.222\" stroke=\"currentColor\" d=\"M-1,0 h2 M0,-1 v2\"></path>\n\t<path id=\"gpPt1\" stroke-width=\"0.222\" stroke=\"currentColor\" d=\"M-1,-1 L1,1 M1,-1 L-1,1\"></path>\n\t<path id=\"gpPt2\" stroke-width=\"0.222\" stroke=\"currentColor\" d=\"M-1,0 L1,0 M0,-1 L0,1 M-1,-1 L1,1 M-1,1 L1,-1\"></path>\n\t<rect id=\"gpPt3\" stroke-width=\"0.222\" stroke=\"currentColor\" x=\"-1\" y=\"-1\" width=\"2\" height=\"2\"></rect>\n\t<rect id=\"gpPt4\" stroke-width=\"0.222\" stroke=\"currentColor\" fill=\"currentColor\" x=\"-1\" y=\"-1\" width=\"2\" height=\"2\"></rect>\n\t<circle id=\"gpPt5\" stroke-width=\"0.222\" stroke=\"currentColor\" cx=\"0\" cy=\"0\" r=\"1\"></circle>\n\t<use xlink:href=\"#gpPt5\" id=\"gpPt6\" fill=\"currentColor\" stroke=\"none\"></use>\n\t<path id=\"gpPt7\" stroke-width=\"0.222\" stroke=\"currentColor\" d=\"M0,-1.33 L-1.33,0.67 L1.33,0.67 z\"></path>\n\t<use xlink:href=\"#gpPt7\" id=\"gpPt8\" fill=\"currentColor\" stroke=\"none\"></use>\n\t<use xlink:href=\"#gpPt7\" id=\"gpPt9\" stroke=\"currentColor\" transform=\"rotate(180)\"></use>\n\t<use xlink:href=\"#gpPt9\" id=\"gpPt10\" fill=\"currentColor\" stroke=\"none\"></use>\n\t<use xlink:href=\"#gpPt3\" id=\"gpPt11\" stroke=\"currentColor\" transform=\"rotate(45)\"></use>\n\t<use xlink:href=\"#gpPt11\" id=\"gpPt12\" fill=\"currentColor\" stroke=\"none\"></use>\n\t<path id=\"gpPt13\" stroke-width=\"0.222\" stroke=\"currentColor\" d=\"M0,1.330 L1.265,0.411 L0.782,-1.067 L-0.782,-1.076 L-1.265,0.411 z\"></path>\n\t<use xlink:href=\"#gpPt13\" id=\"gpPt14\" fill=\"currentColor\" stroke=\"none\"></use>\n\t<filter id=\"textbox\" filterUnits=\"objectBoundingBox\" x=\"0\" y=\"0\" height=\"1\" width=\"1\">\n\t  <feFlood flood-color=\"white\" flood-opacity=\"1\" result=\"bgnd\"></feFlood>\n\t  <feComposite in=\"SourceGraphic\" in2=\"bgnd\" operator=\"atop\"></feComposite>\n\t</filter>\n\t<filter id=\"greybox\" filterUnits=\"objectBoundingBox\" x=\"0\" y=\"0\" height=\"1\" width=\"1\">\n\t  <feFlood flood-color=\"lightgrey\" flood-opacity=\"1\" result=\"grey\"></feFlood>\n\t  <feComposite in=\"SourceGraphic\" in2=\"grey\" operator=\"atop\"></feComposite>\n\t</filter>\n</defs>\n<g fill=\"none\" color=\"white\" stroke=\"currentColor\" stroke-width=\"3.00\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\">\n</g>\n<g fill=\"none\" color=\"black\" stroke=\"currentColor\" stroke-width=\"3.00\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\">\n\t<path stroke=\"black\" d=\"M53.9,444.0 L62.9,444.0 M575.0,444.0 L566.0,444.0  \"></path>\t<g transform=\"translate(45.6,448.5)\" stroke=\"none\" fill=\"black\" font-family=\"Arial\" font-size=\"12.00\" text-anchor=\"end\">\n\t\t<text><tspan font-family=\"Arial\">-1</tspan></text>\n\t</g>\n</g>\n<g fill=\"none\" color=\"black\" stroke=\"currentColor\" stroke-width=\"3.00\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\">\n\t<path stroke=\"black\" d=\"M53.9,401.3 L62.9,401.3 M575.0,401.3 L566.0,401.3  \"></path>\t<g transform=\"translate(45.6,405.8)\" stroke=\"none\" fill=\"black\" font-family=\"Arial\" font-size=\"12.00\" text-anchor=\"end\">\n\t\t<text><tspan font-family=\"Arial\">-0.8</tspan></text>\n\t</g>\n</g>\n<g fill=\"none\" color=\"black\" stroke=\"currentColor\" stroke-width=\"3.00\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\">\n\t<path stroke=\"black\" d=\"M53.9,358.5 L62.9,358.5 M575.0,358.5 L566.0,358.5  \"></path>\t<g transform=\"translate(45.6,363.0)\" stroke=\"none\" fill=\"black\" font-family=\"Arial\" font-size=\"12.00\" text-anchor=\"end\">\n\t\t<text><tspan font-family=\"Arial\">-0.6</tspan></text>\n\t</g>\n</g>\n<g fill=\"none\" color=\"black\" stroke=\"currentColor\" stroke-width=\"3.00\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\">\n\t<path stroke=\"black\" d=\"M53.9,315.8 L62.9,315.8 M575.0,315.8 L566.0,315.8  \"></path>\t<g transform=\"translate(45.6,320.3)\" stroke=\"none\" fill=\"black\" font-family=\"Arial\" font-size=\"12.00\" text-anchor=\"end\">\n\t\t<text><tspan font-family=\"Arial\">-0.4</tspan></text>\n\t</g>\n</g>\n<g fill=\"none\" color=\"black\" stroke=\"currentColor\" stroke-width=\"3.00\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\">\n\t<path stroke=\"black\" d=\"M53.9,273.1 L62.9,273.1 M575.0,273.1 L566.0,273.1  \"></path>\t<g transform=\"translate(45.6,277.6)\" stroke=\"none\" fill=\"black\" font-family=\"Arial\" font-size=\"12.00\" text-anchor=\"end\">\n\t\t<text><tspan font-family=\"Arial\">-0.2</tspan></text>\n\t</g>\n</g>\n<g fill=\"none\" color=\"black\" stroke=\"currentColor\" stroke-width=\"3.00\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\">\n\t<path stroke=\"black\" d=\"M53.9,230.3 L62.9,230.3 M575.0,230.3 L566.0,230.3  \"></path>\t<g transform=\"translate(45.6,234.8)\" stroke=\"none\" fill=\"black\" font-family=\"Arial\" font-size=\"12.00\" text-anchor=\"end\">\n\t\t<text><tspan font-family=\"Arial\"> 0</tspan></text>\n\t</g>\n</g>\n<g fill=\"none\" color=\"black\" stroke=\"currentColor\" stroke-width=\"3.00\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\">\n\t<path stroke=\"black\" d=\"M53.9,187.6 L62.9,187.6 M575.0,187.6 L566.0,187.6  \"></path>\t<g transform=\"translate(45.6,192.1)\" stroke=\"none\" fill=\"black\" font-family=\"Arial\" font-size=\"12.00\" text-anchor=\"end\">\n\t\t<text><tspan font-family=\"Arial\"> 0.2</tspan></text>\n\t</g>\n</g>\n<g fill=\"none\" color=\"black\" stroke=\"currentColor\" stroke-width=\"3.00\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\">\n\t<path stroke=\"black\" d=\"M53.9,144.9 L62.9,144.9 M575.0,144.9 L566.0,144.9  \"></path>\t<g transform=\"translate(45.6,149.4)\" stroke=\"none\" fill=\"black\" font-family=\"Arial\" font-size=\"12.00\" text-anchor=\"end\">\n\t\t<text><tspan font-family=\"Arial\"> 0.4</tspan></text>\n\t</g>\n</g>\n<g fill=\"none\" color=\"black\" stroke=\"currentColor\" stroke-width=\"3.00\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\">\n\t<path stroke=\"black\" d=\"M53.9,102.2 L62.9,102.2 M575.0,102.2 L566.0,102.2  \"></path>\t<g transform=\"translate(45.6,106.7)\" stroke=\"none\" fill=\"black\" font-family=\"Arial\" font-size=\"12.00\" text-anchor=\"end\">\n\t\t<text><tspan font-family=\"Arial\"> 0.6</tspan></text>\n\t</g>\n</g>\n<g fill=\"none\" color=\"black\" stroke=\"currentColor\" stroke-width=\"3.00\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\">\n\t<path stroke=\"black\" d=\"M53.9,59.4 L62.9,59.4 M575.0,59.4 L566.0,59.4  \"></path>\t<g transform=\"translate(45.6,63.9)\" stroke=\"none\" fill=\"black\" font-family=\"Arial\" font-size=\"12.00\" text-anchor=\"end\">\n\t\t<text><tspan font-family=\"Arial\"> 0.8</tspan></text>\n\t</g>\n</g>\n<g fill=\"none\" color=\"black\" stroke=\"currentColor\" stroke-width=\"3.00\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\">\n\t<path stroke=\"black\" d=\"M53.9,16.7 L62.9,16.7 M575.0,16.7 L566.0,16.7  \"></path>\t<g transform=\"translate(45.6,21.2)\" stroke=\"none\" fill=\"black\" font-family=\"Arial\" font-size=\"12.00\" text-anchor=\"end\">\n\t\t<text><tspan font-family=\"Arial\"> 1</tspan></text>\n\t</g>\n</g>\n<g fill=\"none\" color=\"black\" stroke=\"currentColor\" stroke-width=\"3.00\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\">\n\t<path stroke=\"black\" d=\"M53.9,444.0 L53.9,435.0 M53.9,16.7 L53.9,25.7  \"></path>\t<g transform=\"translate(53.9,466.5)\" stroke=\"none\" fill=\"black\" font-family=\"Arial\" font-size=\"12.00\" text-anchor=\"middle\">\n\t\t<text><tspan font-family=\"Arial\"> 0</tspan></text>\n\t</g>\n</g>\n<g fill=\"none\" color=\"black\" stroke=\"currentColor\" stroke-width=\"3.00\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\">\n\t<path stroke=\"black\" d=\"M128.3,444.0 L128.3,435.0 M128.3,16.7 L128.3,25.7  \"></path>\t<g transform=\"translate(128.3,466.5)\" stroke=\"none\" fill=\"black\" font-family=\"Arial\" font-size=\"12.00\" text-anchor=\"middle\">\n\t\t<text><tspan font-family=\"Arial\"> 1</tspan></text>\n\t</g>\n</g>\n<g fill=\"none\" color=\"black\" stroke=\"currentColor\" stroke-width=\"3.00\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\">\n\t<path stroke=\"black\" d=\"M202.8,444.0 L202.8,435.0 M202.8,16.7 L202.8,25.7  \"></path>\t<g transform=\"translate(202.8,466.5)\" stroke=\"none\" fill=\"black\" font-family=\"Arial\" font-size=\"12.00\" text-anchor=\"middle\">\n\t\t<text><tspan font-family=\"Arial\"> 2</tspan></text>\n\t</g>\n</g>\n<g fill=\"none\" color=\"black\" stroke=\"currentColor\" stroke-width=\"3.00\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\">\n\t<path stroke=\"black\" d=\"M277.2,444.0 L277.2,435.0 M277.2,16.7 L277.2,25.7  \"></path>\t<g transform=\"translate(277.2,466.5)\" stroke=\"none\" fill=\"black\" font-family=\"Arial\" font-size=\"12.00\" text-anchor=\"middle\">\n\t\t<text><tspan font-family=\"Arial\"> 3</tspan></text>\n\t</g>\n</g>\n<g fill=\"none\" color=\"black\" stroke=\"currentColor\" stroke-width=\"3.00\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\">\n\t<path stroke=\"black\" d=\"M351.7,444.0 L351.7,435.0 M351.7,16.7 L351.7,25.7  \"></path>\t<g transform=\"translate(351.7,466.5)\" stroke=\"none\" fill=\"black\" font-family=\"Arial\" font-size=\"12.00\" text-anchor=\"middle\">\n\t\t<text><tspan font-family=\"Arial\"> 4</tspan></text>\n\t</g>\n</g>\n<g fill=\"none\" color=\"black\" stroke=\"currentColor\" stroke-width=\"3.00\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\">\n\t<path stroke=\"black\" d=\"M426.1,444.0 L426.1,435.0 M426.1,16.7 L426.1,25.7  \"></path>\t<g transform=\"translate(426.1,466.5)\" stroke=\"none\" fill=\"black\" font-family=\"Arial\" font-size=\"12.00\" text-anchor=\"middle\">\n\t\t<text><tspan font-family=\"Arial\"> 5</tspan></text>\n\t</g>\n</g>\n<g fill=\"none\" color=\"black\" stroke=\"currentColor\" stroke-width=\"3.00\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\">\n\t<path stroke=\"black\" d=\"M500.6,444.0 L500.6,435.0 M500.6,16.7 L500.6,25.7  \"></path>\t<g transform=\"translate(500.6,466.5)\" stroke=\"none\" fill=\"black\" font-family=\"Arial\" font-size=\"12.00\" text-anchor=\"middle\">\n\t\t<text><tspan font-family=\"Arial\"> 6</tspan></text>\n\t</g>\n</g>\n<g fill=\"none\" color=\"black\" stroke=\"currentColor\" stroke-width=\"3.00\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\">\n\t<path stroke=\"black\" d=\"M575.0,444.0 L575.0,435.0 M575.0,16.7 L575.0,25.7  \"></path>\t<g transform=\"translate(575.0,466.5)\" stroke=\"none\" fill=\"black\" font-family=\"Arial\" font-size=\"12.00\" text-anchor=\"middle\">\n\t\t<text><tspan font-family=\"Arial\"> 7</tspan></text>\n\t</g>\n</g>\n<g fill=\"none\" color=\"black\" stroke=\"currentColor\" stroke-width=\"3.00\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\">\n</g>\n<g fill=\"none\" color=\"black\" stroke=\"currentColor\" stroke-width=\"3.00\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\">\n\t<path stroke=\"black\" d=\"M53.9,16.7 L53.9,444.0 L575.0,444.0 L575.0,16.7 L53.9,16.7 Z  \"></path></g>\n<g fill=\"none\" color=\"black\" stroke=\"currentColor\" stroke-width=\"3.00\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\">\n\t<g transform=\"translate(17.6,230.4) rotate(270)\" stroke=\"none\" fill=\"black\" font-family=\"Arial\" font-size=\"12.00\" text-anchor=\"middle\">\n\t\t<text></text>\n\t</g>\n</g>\n<g fill=\"none\" color=\"black\" stroke=\"currentColor\" stroke-width=\"3.00\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\">\n</g>\n<g fill=\"none\" color=\"black\" stroke=\"currentColor\" stroke-width=\"3.00\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\">\n</g>\n\t<g id=\"gnuplot_plot_1\"><title>Label</title>\n<g fill=\"none\" color=\"black\" stroke=\"currentColor\" stroke-width=\"3.00\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\">\n\t<path stroke=\"rgb(148,   0, 211)\" d=\"M53.9,230.3 L72.5,177.5 L91.1,127.9 L109.7,84.7 L128.3,50.6 L147.0,27.6 L165.6,17.2 L184.2,20.1\n\t\tL202.8,36.1 L221.4,64.1 L240.0,102.5 L258.6,148.8 L277.2,200.2 L295.8,253.5 L314.5,305.3 L333.1,352.5\n\t\tL351.7,392.0 L370.3,421.6 L388.9,439.2 L407.5,443.8 L426.1,435.2 L444.7,413.9 L463.3,381.1 L481.9,338.9\n\t\tL500.6,290.0 L519.2,237.4  \"></path>\t<use xlink:href=\"#gpPt0\" transform=\"translate(53.9,230.3) scale(4.50)\" color=\"rgb(148,   0, 211)\"></use>\n\t<use xlink:href=\"#gpPt0\" transform=\"translate(72.5,177.5) scale(4.50)\" color=\"rgb(148,   0, 211)\"></use>\n\t<use xlink:href=\"#gpPt0\" transform=\"translate(91.1,127.9) scale(4.50)\" color=\"rgb(148,   0, 211)\"></use>\n\t<use xlink:href=\"#gpPt0\" transform=\"translate(109.7,84.7) scale(4.50)\" color=\"rgb(148,   0, 211)\"></use>\n\t<use xlink:href=\"#gpPt0\" transform=\"translate(128.3,50.6) scale(4.50)\" color=\"rgb(148,   0, 211)\"></use>\n\t<use xlink:href=\"#gpPt0\" transform=\"translate(147.0,27.6) scale(4.50)\" color=\"rgb(148,   0, 211)\"></use>\n\t<use xlink:href=\"#gpPt0\" transform=\"translate(165.6,17.2) scale(4.50)\" color=\"rgb(148,   0, 211)\"></use>\n\t<use xlink:href=\"#gpPt0\" transform=\"translate(184.2,20.1) scale(4.50)\" color=\"rgb(148,   0, 211)\"></use>\n\t<use xlink:href=\"#gpPt0\" transform=\"translate(202.8,36.1) scale(4.50)\" color=\"rgb(148,   0, 211)\"></use>\n\t<use xlink:href=\"#gpPt0\" transform=\"translate(221.4,64.1) scale(4.50)\" color=\"rgb(148,   0, 211)\"></use>\n\t<use xlink:href=\"#gpPt0\" transform=\"translate(240.0,102.5) scale(4.50)\" color=\"rgb(148,   0, 211)\"></use>\n\t<use xlink:href=\"#gpPt0\" transform=\"translate(258.6,148.8) scale(4.50)\" color=\"rgb(148,   0, 211)\"></use>\n\t<use xlink:href=\"#gpPt0\" transform=\"translate(277.2,200.2) scale(4.50)\" color=\"rgb(148,   0, 211)\"></use>\n\t<use xlink:href=\"#gpPt0\" transform=\"translate(295.8,253.5) scale(4.50)\" color=\"rgb(148,   0, 211)\"></use>\n\t<use xlink:href=\"#gpPt0\" transform=\"translate(314.5,305.3) scale(4.50)\" color=\"rgb(148,   0, 211)\"></use>\n\t<use xlink:href=\"#gpPt0\" transform=\"translate(333.1,352.5) scale(4.50)\" color=\"rgb(148,   0, 211)\"></use>\n\t<use xlink:href=\"#gpPt0\" transform=\"translate(351.7,392.0) scale(4.50)\" color=\"rgb(148,   0, 211)\"></use>\n\t<use xlink:href=\"#gpPt0\" transform=\"translate(370.3,421.6) scale(4.50)\" color=\"rgb(148,   0, 211)\"></use>\n\t<use xlink:href=\"#gpPt0\" transform=\"translate(388.9,439.2) scale(4.50)\" color=\"rgb(148,   0, 211)\"></use>\n\t<use xlink:href=\"#gpPt0\" transform=\"translate(407.5,443.8) scale(4.50)\" color=\"rgb(148,   0, 211)\"></use>\n\t<use xlink:href=\"#gpPt0\" transform=\"translate(426.1,435.2) scale(4.50)\" color=\"rgb(148,   0, 211)\"></use>\n\t<use xlink:href=\"#gpPt0\" transform=\"translate(444.7,413.9) scale(4.50)\" color=\"rgb(148,   0, 211)\"></use>\n\t<use xlink:href=\"#gpPt0\" transform=\"translate(463.3,381.1) scale(4.50)\" color=\"rgb(148,   0, 211)\"></use>\n\t<use xlink:href=\"#gpPt0\" transform=\"translate(481.9,338.9) scale(4.50)\" color=\"rgb(148,   0, 211)\"></use>\n\t<use xlink:href=\"#gpPt0\" transform=\"translate(500.6,290.0) scale(4.50)\" color=\"rgb(148,   0, 211)\"></use>\n\t<use xlink:href=\"#gpPt0\" transform=\"translate(519.2,237.4) scale(4.50)\" color=\"rgb(148,   0, 211)\"></use>\n</g>\n\t</g>\n\t<g id=\"gnuplot_plot_2\"><title>Label</title>\n<g fill=\"none\" color=\"black\" stroke=\"currentColor\" stroke-width=\"3.00\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\">\n\t<path stroke=\"rgb(  0, 158, 115)\" d=\"M53.9,16.7 L72.5,23.3 L91.1,42.9 L109.7,74.0 L128.3,114.9 L147.0,163.0 L165.6,215.2 L184.2,268.4\n\t\tL202.8,319.3 L221.4,364.6 L240.0,401.5 L258.6,427.8 L277.2,441.9 L295.8,442.7 L314.5,430.4 L333.1,405.7\n\t\tL351.7,370.0 L370.3,325.7 L388.9,275.4 L407.5,222.3 L426.1,169.7 L444.7,120.9 L463.3,78.9 L481.9,46.4\n\t\tL500.6,25.2 L519.2,16.8  \"></path>\t<use xlink:href=\"#gpPt1\" transform=\"translate(53.9,16.7) scale(4.50)\" color=\"rgb(  0, 158, 115)\"></use>\n\t<use xlink:href=\"#gpPt1\" transform=\"translate(72.5,23.3) scale(4.50)\" color=\"rgb(  0, 158, 115)\"></use>\n\t<use xlink:href=\"#gpPt1\" transform=\"translate(91.1,42.9) scale(4.50)\" color=\"rgb(  0, 158, 115)\"></use>\n\t<use xlink:href=\"#gpPt1\" transform=\"translate(109.7,74.0) scale(4.50)\" color=\"rgb(  0, 158, 115)\"></use>\n\t<use xlink:href=\"#gpPt1\" transform=\"translate(128.3,114.9) scale(4.50)\" color=\"rgb(  0, 158, 115)\"></use>\n\t<use xlink:href=\"#gpPt1\" transform=\"translate(147.0,163.0) scale(4.50)\" color=\"rgb(  0, 158, 115)\"></use>\n\t<use xlink:href=\"#gpPt1\" transform=\"translate(165.6,215.2) scale(4.50)\" color=\"rgb(  0, 158, 115)\"></use>\n\t<use xlink:href=\"#gpPt1\" transform=\"translate(184.2,268.4) scale(4.50)\" color=\"rgb(  0, 158, 115)\"></use>\n\t<use xlink:href=\"#gpPt1\" transform=\"translate(202.8,319.3) scale(4.50)\" color=\"rgb(  0, 158, 115)\"></use>\n\t<use xlink:href=\"#gpPt1\" transform=\"translate(221.4,364.6) scale(4.50)\" color=\"rgb(  0, 158, 115)\"></use>\n\t<use xlink:href=\"#gpPt1\" transform=\"translate(240.0,401.5) scale(4.50)\" color=\"rgb(  0, 158, 115)\"></use>\n\t<use xlink:href=\"#gpPt1\" transform=\"translate(258.6,427.8) scale(4.50)\" color=\"rgb(  0, 158, 115)\"></use>\n\t<use xlink:href=\"#gpPt1\" transform=\"translate(277.2,441.9) scale(4.50)\" color=\"rgb(  0, 158, 115)\"></use>\n\t<use xlink:href=\"#gpPt1\" transform=\"translate(295.8,442.7) scale(4.50)\" color=\"rgb(  0, 158, 115)\"></use>\n\t<use xlink:href=\"#gpPt1\" transform=\"translate(314.5,430.4) scale(4.50)\" color=\"rgb(  0, 158, 115)\"></use>\n\t<use xlink:href=\"#gpPt1\" transform=\"translate(333.1,405.7) scale(4.50)\" color=\"rgb(  0, 158, 115)\"></use>\n\t<use xlink:href=\"#gpPt1\" transform=\"translate(351.7,370.0) scale(4.50)\" color=\"rgb(  0, 158, 115)\"></use>\n\t<use xlink:href=\"#gpPt1\" transform=\"translate(370.3,325.7) scale(4.50)\" color=\"rgb(  0, 158, 115)\"></use>\n\t<use xlink:href=\"#gpPt1\" transform=\"translate(388.9,275.4) scale(4.50)\" color=\"rgb(  0, 158, 115)\"></use>\n\t<use xlink:href=\"#gpPt1\" transform=\"translate(407.5,222.3) scale(4.50)\" color=\"rgb(  0, 158, 115)\"></use>\n\t<use xlink:href=\"#gpPt1\" transform=\"translate(426.1,169.7) scale(4.50)\" color=\"rgb(  0, 158, 115)\"></use>\n\t<use xlink:href=\"#gpPt1\" transform=\"translate(444.7,120.9) scale(4.50)\" color=\"rgb(  0, 158, 115)\"></use>\n\t<use xlink:href=\"#gpPt1\" transform=\"translate(463.3,78.9) scale(4.50)\" color=\"rgb(  0, 158, 115)\"></use>\n\t<use xlink:href=\"#gpPt1\" transform=\"translate(481.9,46.4) scale(4.50)\" color=\"rgb(  0, 158, 115)\"></use>\n\t<use xlink:href=\"#gpPt1\" transform=\"translate(500.6,25.2) scale(4.50)\" color=\"rgb(  0, 158, 115)\"></use>\n\t<use xlink:href=\"#gpPt1\" transform=\"translate(519.2,16.8) scale(4.50)\" color=\"rgb(  0, 158, 115)\"></use>\n</g>\n\t</g>\n<g fill=\"none\" color=\"white\" stroke=\"rgb(  0, 158, 115)\" stroke-width=\"6.00\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\">\n</g>\n<g fill=\"none\" color=\"black\" stroke=\"currentColor\" stroke-width=\"6.00\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\">\n</g>\n<g fill=\"none\" color=\"black\" stroke=\"black\" stroke-width=\"3.00\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\">\n</g>\n<g fill=\"none\" color=\"black\" stroke=\"currentColor\" stroke-width=\"3.00\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\">\n\t<path stroke=\"black\" d=\"M53.9,16.7 L53.9,444.0 L575.0,444.0 L575.0,16.7 L53.9,16.7 Z  \"></path></g>\n<g fill=\"none\" color=\"black\" stroke=\"currentColor\" stroke-width=\"3.00\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\">\n</g>\n</g>\n</svg>\n\n<a href=\"/private/var/folders/rv/p18cqn455rscqtdcmz5b6dg00000gn/T/moro-plots80518727556311258821433632002161/plot.gpl\">Source</a></div>"
    }
  }, {
    "id" : 33,
    "compiler" : "section",
    "input" : {
      "sessionId" : null,
      "code" : "barplot",
      "extraFields" : { },
      "outputFormat" : "<h5 id=\"barplot\" class=\"section\"><a href=\"#barplot\" class=\"muted\"><small>#barplot</small></a></h5>\n<hr>"
    }
  }, {
    "id" : 34,
    "compiler" : "scala",
    "input" : {
      "sessionId" : null,
      "code" : "val bx = 0 until 5\nbarChart(\n    bx.map(\"x\" + _) ->(bx.map(i => math.sin(i / 3.0) + 0.5), \n        bx.map(i => math.cos(i / 3.0) + 0.5)))",
      "extraFields" : {
        "fragment" : "true",
        "aggregatedCells" : "[\"def f(x: Int) = x*x\\nf(1)\",\"f(10)\",\"def f2(x:Int) = x + x\\nMap(10 -> \\\"ten\\\", 100 -> \\\"hundred\\\")\",\"// Matrices!\\nval random = new scala.util.Random()\\nMatrix((0 until 10).map(i => (0 until 10).map(j => (i+j)+2*random.nextDouble())))\",\"// Vectors\\nval means = Seq(Seq.fill(10)(-10.0), Seq.fill(10)(10.0))\\nval vectors = org.sameersingh.htmlgen.Custom.Vectors(\\n  means.zipWithIndex.map(xi => (0 until 10).map(j => (xi._2, xi._2 + \\\"_\\\" + j, xi._1.map(v => v + random.nextGaussian() * 0.1)))).flatten\\n)\\norg.sameersingh.htmlgen.D3jsConverter.convert(vectors)\",\"val x = (0.0 to 6.28 by 0.25)\\nxyChart(x -> (math.sin(_), math.cos(_)))\"]"
      },
      "outputFormat" : "<div class=\"string-result\"><!--?xml version=\"1.0\" encoding=\"utf-8\"  standalone=\"no\"?-->\n\n<svg width=\"600\" height=\"480\" viewBox=\"0 0 600 480\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n\n<title>Gnuplot</title>\n<desc>Produced by GNUPLOT 5.0 patchlevel 0 </desc>\n\n<g id=\"gnuplot_canvas\">\n\n<rect x=\"0\" y=\"0\" width=\"600\" height=\"480\" fill=\"none\"></rect>\n<defs>\n\n\t<circle id=\"gpDot\" r=\"0.5\" stroke-width=\"0.5\"></circle>\n\t<path id=\"gpPt0\" stroke-width=\"0.222\" stroke=\"currentColor\" d=\"M-1,0 h2 M0,-1 v2\"></path>\n\t<path id=\"gpPt1\" stroke-width=\"0.222\" stroke=\"currentColor\" d=\"M-1,-1 L1,1 M1,-1 L-1,1\"></path>\n\t<path id=\"gpPt2\" stroke-width=\"0.222\" stroke=\"currentColor\" d=\"M-1,0 L1,0 M0,-1 L0,1 M-1,-1 L1,1 M-1,1 L1,-1\"></path>\n\t<rect id=\"gpPt3\" stroke-width=\"0.222\" stroke=\"currentColor\" x=\"-1\" y=\"-1\" width=\"2\" height=\"2\"></rect>\n\t<rect id=\"gpPt4\" stroke-width=\"0.222\" stroke=\"currentColor\" fill=\"currentColor\" x=\"-1\" y=\"-1\" width=\"2\" height=\"2\"></rect>\n\t<circle id=\"gpPt5\" stroke-width=\"0.222\" stroke=\"currentColor\" cx=\"0\" cy=\"0\" r=\"1\"></circle>\n\t<use xlink:href=\"#gpPt5\" id=\"gpPt6\" fill=\"currentColor\" stroke=\"none\"></use>\n\t<path id=\"gpPt7\" stroke-width=\"0.222\" stroke=\"currentColor\" d=\"M0,-1.33 L-1.33,0.67 L1.33,0.67 z\"></path>\n\t<use xlink:href=\"#gpPt7\" id=\"gpPt8\" fill=\"currentColor\" stroke=\"none\"></use>\n\t<use xlink:href=\"#gpPt7\" id=\"gpPt9\" stroke=\"currentColor\" transform=\"rotate(180)\"></use>\n\t<use xlink:href=\"#gpPt9\" id=\"gpPt10\" fill=\"currentColor\" stroke=\"none\"></use>\n\t<use xlink:href=\"#gpPt3\" id=\"gpPt11\" stroke=\"currentColor\" transform=\"rotate(45)\"></use>\n\t<use xlink:href=\"#gpPt11\" id=\"gpPt12\" fill=\"currentColor\" stroke=\"none\"></use>\n\t<path id=\"gpPt13\" stroke-width=\"0.222\" stroke=\"currentColor\" d=\"M0,1.330 L1.265,0.411 L0.782,-1.067 L-0.782,-1.076 L-1.265,0.411 z\"></path>\n\t<use xlink:href=\"#gpPt13\" id=\"gpPt14\" fill=\"currentColor\" stroke=\"none\"></use>\n\t<filter id=\"textbox\" filterUnits=\"objectBoundingBox\" x=\"0\" y=\"0\" height=\"1\" width=\"1\">\n\t  <feFlood flood-color=\"white\" flood-opacity=\"1\" result=\"bgnd\"></feFlood>\n\t  <feComposite in=\"SourceGraphic\" in2=\"bgnd\" operator=\"atop\"></feComposite>\n\t</filter>\n\t<filter id=\"greybox\" filterUnits=\"objectBoundingBox\" x=\"0\" y=\"0\" height=\"1\" width=\"1\">\n\t  <feFlood flood-color=\"lightgrey\" flood-opacity=\"1\" result=\"grey\"></feFlood>\n\t  <feComposite in=\"SourceGraphic\" in2=\"grey\" operator=\"atop\"></feComposite>\n\t</filter>\n</defs>\n<g fill=\"none\" color=\"white\" stroke=\"currentColor\" stroke-width=\"3.00\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\">\n</g>\n<g fill=\"none\" color=\"black\" stroke=\"currentColor\" stroke-width=\"3.00\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\">\n\t<path stroke=\"black\" d=\"M53.9,444.0 L62.9,444.0 M575.0,444.0 L566.0,444.0  \"></path>\t<g transform=\"translate(45.6,448.5)\" stroke=\"none\" fill=\"black\" font-family=\"Arial\" font-size=\"12.00\" text-anchor=\"end\">\n\t\t<text><tspan font-family=\"Arial\"> 0.4</tspan></text>\n\t</g>\n</g>\n<g fill=\"none\" color=\"black\" stroke=\"currentColor\" stroke-width=\"3.00\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\">\n\t<path stroke=\"black\" d=\"M53.9,372.8 L62.9,372.8 M575.0,372.8 L566.0,372.8  \"></path>\t<g transform=\"translate(45.6,377.3)\" stroke=\"none\" fill=\"black\" font-family=\"Arial\" font-size=\"12.00\" text-anchor=\"end\">\n\t\t<text><tspan font-family=\"Arial\"> 0.6</tspan></text>\n\t</g>\n</g>\n<g fill=\"none\" color=\"black\" stroke=\"currentColor\" stroke-width=\"3.00\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\">\n\t<path stroke=\"black\" d=\"M53.9,301.6 L62.9,301.6 M575.0,301.6 L566.0,301.6  \"></path>\t<g transform=\"translate(45.6,306.1)\" stroke=\"none\" fill=\"black\" font-family=\"Arial\" font-size=\"12.00\" text-anchor=\"end\">\n\t\t<text><tspan font-family=\"Arial\"> 0.8</tspan></text>\n\t</g>\n</g>\n<g fill=\"none\" color=\"black\" stroke=\"currentColor\" stroke-width=\"3.00\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\">\n\t<path stroke=\"black\" d=\"M53.9,230.4 L62.9,230.4 M575.0,230.4 L566.0,230.4  \"></path>\t<g transform=\"translate(45.6,234.9)\" stroke=\"none\" fill=\"black\" font-family=\"Arial\" font-size=\"12.00\" text-anchor=\"end\">\n\t\t<text><tspan font-family=\"Arial\"> 1</tspan></text>\n\t</g>\n</g>\n<g fill=\"none\" color=\"black\" stroke=\"currentColor\" stroke-width=\"3.00\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\">\n\t<path stroke=\"black\" d=\"M53.9,159.1 L62.9,159.1 M575.0,159.1 L566.0,159.1  \"></path>\t<g transform=\"translate(45.6,163.6)\" stroke=\"none\" fill=\"black\" font-family=\"Arial\" font-size=\"12.00\" text-anchor=\"end\">\n\t\t<text><tspan font-family=\"Arial\"> 1.2</tspan></text>\n\t</g>\n</g>\n<g fill=\"none\" color=\"black\" stroke=\"currentColor\" stroke-width=\"3.00\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\">\n\t<path stroke=\"black\" d=\"M53.9,87.9 L62.9,87.9 M575.0,87.9 L566.0,87.9  \"></path>\t<g transform=\"translate(45.6,92.4)\" stroke=\"none\" fill=\"black\" font-family=\"Arial\" font-size=\"12.00\" text-anchor=\"end\">\n\t\t<text><tspan font-family=\"Arial\"> 1.4</tspan></text>\n\t</g>\n</g>\n<g fill=\"none\" color=\"black\" stroke=\"currentColor\" stroke-width=\"3.00\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\">\n\t<path stroke=\"black\" d=\"M53.9,16.7 L62.9,16.7 M575.0,16.7 L566.0,16.7  \"></path>\t<g transform=\"translate(45.6,21.2)\" stroke=\"none\" fill=\"black\" font-family=\"Arial\" font-size=\"12.00\" text-anchor=\"end\">\n\t\t<text><tspan font-family=\"Arial\"> 1.6</tspan></text>\n\t</g>\n</g>\n<g fill=\"none\" color=\"black\" stroke=\"currentColor\" stroke-width=\"3.00\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\">\n\t<path stroke=\"black\" d=\"M140.8,444.0 L140.8,435.0 M140.8,16.7 L140.8,25.7  \"></path>\t<g transform=\"translate(140.8,466.5)\" stroke=\"none\" fill=\"black\" font-family=\"Arial\" font-size=\"12.00\" text-anchor=\"middle\">\n\t\t<text><tspan font-family=\"Arial\">x0</tspan></text>\n\t</g>\n</g>\n<g fill=\"none\" color=\"black\" stroke=\"currentColor\" stroke-width=\"3.00\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\">\n\t<path stroke=\"black\" d=\"M227.6,444.0 L227.6,435.0 M227.6,16.7 L227.6,25.7  \"></path>\t<g transform=\"translate(227.6,466.5)\" stroke=\"none\" fill=\"black\" font-family=\"Arial\" font-size=\"12.00\" text-anchor=\"middle\">\n\t\t<text><tspan font-family=\"Arial\">x1</tspan></text>\n\t</g>\n</g>\n<g fill=\"none\" color=\"black\" stroke=\"currentColor\" stroke-width=\"3.00\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\">\n\t<path stroke=\"black\" d=\"M314.5,444.0 L314.5,435.0 M314.5,16.7 L314.5,25.7  \"></path>\t<g transform=\"translate(314.5,466.5)\" stroke=\"none\" fill=\"black\" font-family=\"Arial\" font-size=\"12.00\" text-anchor=\"middle\">\n\t\t<text><tspan font-family=\"Arial\">x2</tspan></text>\n\t</g>\n</g>\n<g fill=\"none\" color=\"black\" stroke=\"currentColor\" stroke-width=\"3.00\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\">\n\t<path stroke=\"black\" d=\"M401.3,444.0 L401.3,435.0 M401.3,16.7 L401.3,25.7  \"></path>\t<g transform=\"translate(401.3,466.5)\" stroke=\"none\" fill=\"black\" font-family=\"Arial\" font-size=\"12.00\" text-anchor=\"middle\">\n\t\t<text><tspan font-family=\"Arial\">x3</tspan></text>\n\t</g>\n</g>\n<g fill=\"none\" color=\"black\" stroke=\"currentColor\" stroke-width=\"3.00\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\">\n\t<path stroke=\"black\" d=\"M488.2,444.0 L488.2,435.0 M488.2,16.7 L488.2,25.7  \"></path>\t<g transform=\"translate(488.2,466.5)\" stroke=\"none\" fill=\"black\" font-family=\"Arial\" font-size=\"12.00\" text-anchor=\"middle\">\n\t\t<text><tspan font-family=\"Arial\">x4</tspan></text>\n\t</g>\n</g>\n<g fill=\"none\" color=\"black\" stroke=\"currentColor\" stroke-width=\"3.00\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\">\n</g>\n<g fill=\"none\" color=\"black\" stroke=\"currentColor\" stroke-width=\"3.00\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\">\n\t<path stroke=\"black\" d=\"M53.9,16.7 L53.9,444.0 L575.0,444.0 L575.0,16.7 L53.9,16.7 Z  \"></path></g>\n<g fill=\"none\" color=\"black\" stroke=\"currentColor\" stroke-width=\"3.00\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\">\n\t<g transform=\"translate(17.6,230.4) rotate(270)\" stroke=\"none\" fill=\"black\" font-family=\"Arial\" font-size=\"12.00\" text-anchor=\"middle\">\n\t\t<text></text>\n\t</g>\n</g>\n<g fill=\"none\" color=\"black\" stroke=\"currentColor\" stroke-width=\"3.00\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\">\n</g>\n<g fill=\"none\" color=\"black\" stroke=\"currentColor\" stroke-width=\"3.00\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\">\n</g>\n\t<g id=\"gnuplot_plot_1\"><title>Label</title>\n<g fill=\"none\" color=\"black\" stroke=\"currentColor\" stroke-width=\"3.00\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\">\n\t<g stroke=\"none\" shape-rendering=\"crispEdges\">\n\t\t<polygon fill=\"rgb(148,   0, 211)\" points=\"111.8,444.0 140.9,444.0 140.9,408.3 111.8,408.3 \"></polygon>\n\t</g>\n\t<path stroke=\"black\" d=\"M111.8,444.0 L111.8,408.4 L140.8,408.4 L140.8,444.0 L111.8,444.0 Z  \"></path></g>\n<g fill=\"none\" color=\"black\" stroke=\"currentColor\" stroke-width=\"3.00\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\">\n\t<g stroke=\"none\" shape-rendering=\"crispEdges\">\n\t\t<polygon fill=\"rgb(148,   0, 211)\" points=\"198.6,444.0 227.7,444.0 227.7,291.8 198.6,291.8 \"></polygon>\n\t</g>\n\t<path stroke=\"black\" d=\"M198.6,444.0 L198.6,291.9 L227.6,291.9 L227.6,444.0 L198.6,444.0 Z  \"></path></g>\n<g fill=\"none\" color=\"black\" stroke=\"currentColor\" stroke-width=\"3.00\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\">\n\t<g stroke=\"none\" shape-rendering=\"crispEdges\">\n\t\t<polygon fill=\"rgb(148,   0, 211)\" points=\"285.5,444.0 314.6,444.0 314.6,188.1 285.5,188.1 \"></polygon>\n\t</g>\n\t<path stroke=\"black\" d=\"M285.5,444.0 L285.5,188.2 L314.5,188.2 L314.5,444.0 L285.5,444.0 Z  \"></path></g>\n<g fill=\"none\" color=\"black\" stroke=\"currentColor\" stroke-width=\"3.00\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\">\n\t<g stroke=\"none\" shape-rendering=\"crispEdges\">\n\t\t<polygon fill=\"rgb(148,   0, 211)\" points=\"372.4,444.0 401.4,444.0 401.4,108.7 372.4,108.7 \"></polygon>\n\t</g>\n\t<path stroke=\"black\" d=\"M372.4,444.0 L372.4,108.8 L401.3,108.8 L401.3,444.0 L372.4,444.0 Z  \"></path></g>\n<g fill=\"none\" color=\"black\" stroke=\"currentColor\" stroke-width=\"3.00\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\">\n\t<g stroke=\"none\" shape-rendering=\"crispEdges\">\n\t\t<polygon fill=\"rgb(148,   0, 211)\" points=\"459.2,444.0 488.3,444.0 488.3,62.2 459.2,62.2 \"></polygon>\n\t</g>\n\t<path stroke=\"black\" d=\"M459.2,444.0 L459.2,62.3 L488.2,62.3 L488.2,444.0 L459.2,444.0 Z  \"></path></g>\n<g fill=\"none\" color=\"black\" stroke=\"currentColor\" stroke-width=\"3.00\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\">\n</g>\n\t</g>\n\t<g id=\"gnuplot_plot_2\"><title>Label</title>\n<g fill=\"none\" color=\"black\" stroke=\"currentColor\" stroke-width=\"3.00\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\">\n\t<g stroke=\"none\" shape-rendering=\"crispEdges\">\n\t\t<polygon fill=\"rgb(  0, 158, 115)\" points=\"140.8,444.0 169.8,444.0 169.8,52.2 140.8,52.2 \"></polygon>\n\t</g>\n\t<path stroke=\"black\" d=\"M140.8,444.0 L140.8,52.3 L169.7,52.3 L169.7,444.0 L140.8,444.0 Z  \"></path></g>\n<g fill=\"none\" color=\"black\" stroke=\"currentColor\" stroke-width=\"3.00\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\">\n\t<g stroke=\"none\" shape-rendering=\"crispEdges\">\n\t\t<polygon fill=\"rgb(  0, 158, 115)\" points=\"227.6,444.0 256.7,444.0 256.7,71.8 227.6,71.8 \"></polygon>\n\t</g>\n\t<path stroke=\"black\" d=\"M227.6,444.0 L227.6,71.9 L256.6,71.9 L256.6,444.0 L227.6,444.0 Z  \"></path></g>\n<g fill=\"none\" color=\"black\" stroke=\"currentColor\" stroke-width=\"3.00\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\">\n\t<g stroke=\"none\" shape-rendering=\"crispEdges\">\n\t\t<polygon fill=\"rgb(  0, 158, 115)\" points=\"314.5,444.0 343.5,444.0 343.5,128.5 314.5,128.5 \"></polygon>\n\t</g>\n\t<path stroke=\"black\" d=\"M314.5,444.0 L314.5,128.6 L343.4,128.6 L343.4,444.0 L314.5,444.0 Z  \"></path></g>\n<g fill=\"none\" color=\"black\" stroke=\"currentColor\" stroke-width=\"3.00\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\">\n\t<g stroke=\"none\" shape-rendering=\"crispEdges\">\n\t\t<polygon fill=\"rgb(  0, 158, 115)\" points=\"401.3,444.0 430.4,444.0 430.4,215.9 401.3,215.9 \"></polygon>\n\t</g>\n\t<path stroke=\"black\" d=\"M401.3,444.0 L401.3,216.0 L430.3,216.0 L430.3,444.0 L401.3,444.0 Z  \"></path></g>\n<g fill=\"none\" color=\"black\" stroke=\"currentColor\" stroke-width=\"3.00\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\">\n\t<g stroke=\"none\" shape-rendering=\"crispEdges\">\n\t\t<polygon fill=\"rgb(  0, 158, 115)\" points=\"488.2,444.0 517.2,444.0 517.2,324.5 488.2,324.5 \"></polygon>\n\t</g>\n\t<path stroke=\"black\" d=\"M488.2,444.0 L488.2,324.6 L517.1,324.6 L517.1,444.0 L488.2,444.0 Z  \"></path></g>\n<g fill=\"none\" color=\"black\" stroke=\"currentColor\" stroke-width=\"3.00\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\">\n</g>\n\t</g>\n<g fill=\"none\" color=\"white\" stroke=\"rgb(  0, 158, 115)\" stroke-width=\"6.00\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\">\n</g>\n<g fill=\"none\" color=\"black\" stroke=\"currentColor\" stroke-width=\"6.00\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\">\n</g>\n<g fill=\"none\" color=\"black\" stroke=\"black\" stroke-width=\"3.00\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\">\n</g>\n<g fill=\"none\" color=\"black\" stroke=\"currentColor\" stroke-width=\"3.00\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\">\n\t<path stroke=\"black\" d=\"M53.9,16.7 L53.9,444.0 L575.0,444.0 L575.0,16.7 L53.9,16.7 Z  \"></path></g>\n<g fill=\"none\" color=\"black\" stroke=\"currentColor\" stroke-width=\"3.00\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\">\n</g>\n</g>\n</svg>\n\n<a href=\"/private/var/folders/rv/p18cqn455rscqtdcmz5b6dg00000gn/T/moro-plots87752968147970052031433632005598/plot.gpl\">Source</a></div>"
    }
  }, {
    "id" : 35,
    "compiler" : "section",
    "input" : {
      "sessionId" : null,
      "code" : "others",
      "extraFields" : { },
      "outputFormat" : "<h5 id=\"others\" class=\"section\"><a href=\"#others\" class=\"muted\"><small>#others</small></a></h5>\n<hr>"
    }
  }, {
    "id" : 36,
    "compiler" : "markdown",
    "input" : {
      "sessionId" : null,
      "code" : "### Or pretty much any file format*\n\nThose supported by [Google Drive viewer](https://support.google.com/drive/answer/2423485?hl=en&p=docs_viewer&rd=1), i.e.\n\n* Image files (.JPEG, .PNG, .GIF, .TIFF, .BMP) <!-- .element: class=\"fragment\" -->\n* Video files (WebM, .MPEG4, .3GPP, .MOV, .AVI, .MPEGPS, .WMV, .FLV, .ogg)  <!-- .element: class=\"fragment\" -->\n* Text files (.TXT)  <!-- .element: class=\"fragment\" -->\n* Markup/Code (.CSS, .HTML, .PHP, .C, .CPP, .H, .HPP, .JS)  <!-- .element: class=\"fragment\" -->\n* Microsoft Word (.DOC and .DOCX)  <!-- .element: class=\"fragment\" -->\n* Microsoft Excel (.XLS and .XLSX)  <!-- .element: class=\"fragment\" -->\n* Microsoft PowerPoint (.PPT and .PPTX)  <!-- .element: class=\"fragment\" -->\n* Adobe Portable Document Format (.PDF)  <!-- .element: class=\"fragment\" -->\n* Apple Pages (.PAGES)\n* Adobe Illustrator (.AI)\n* Adobe Photoshop (.PSD)\n* Tagged Image File Format (.TIFF)\n* Autodesk AutoCad (.DXF)\n* Scalable Vector Graphics (.SVG)\n* PostScript (.EPS, .PS)\n* TrueType (.TTF)\n* XML Paper Specification (.XPS)\n* Archive file types (.ZIP, .RAR, tar, gzip)\n* Audio formats (MP3, MPEG, WAV, .ogg)\n* .MTS files\n* Raw Image formats",
      "extraFields" : { },
      "outputFormat" : "<h3>Or pretty much any file format*</h3><p>Those supported by <a href=\"https://support.google.com/drive/answer/2423485?hl=en&amp;p=docs_viewer&amp;rd=1\">Google Drive viewer</a>, i.e.</p>\n<ul>\n  <li>Image files (.JPEG, .PNG, .GIF, .TIFF, .BMP) <!-- .element: class=\"fragment\" --></li>\n  <li>Video files (WebM, .MPEG4, .3GPP, .MOV, .AVI, .MPEGPS, .WMV, .FLV, .ogg) <!-- .element: class=\"fragment\" --></li>\n  <li>Text files (.TXT) <!-- .element: class=\"fragment\" --></li>\n  <li>Markup/Code (.CSS, .HTML, .PHP, .C, .CPP, .H, .HPP, .JS) <!-- .element: class=\"fragment\" --></li>\n  <li>Microsoft Word (.DOC and .DOCX) <!-- .element: class=\"fragment\" --></li>\n  <li>Microsoft Excel (.XLS and .XLSX) <!-- .element: class=\"fragment\" --></li>\n  <li>Microsoft PowerPoint (.PPT and .PPTX) <!-- .element: class=\"fragment\" --></li>\n  <li>Adobe Portable Document Format (.PDF) <!-- .element: class=\"fragment\" --></li>\n  <li>Apple Pages (.PAGES)</li>\n  <li>Adobe Illustrator (.AI)</li>\n  <li>Adobe Photoshop (.PSD)</li>\n  <li>Tagged Image File Format (.TIFF)</li>\n  <li>Autodesk AutoCad (.DXF)</li>\n  <li>Scalable Vector Graphics (.SVG)</li>\n  <li>PostScript (.EPS, .PS)</li>\n  <li>TrueType (.TTF)</li>\n  <li>XML Paper Specification (.XPS)</li>\n  <li>Archive file types (.ZIP, .RAR, tar, gzip)</li>\n  <li>Audio formats (MP3, MPEG, WAV, .ogg)</li>\n  <li>.MTS files</li>\n  <li>Raw Image formats</li>\n</ul>"
    }
  }, {
    "id" : 37,
    "compiler" : "section",
    "input" : {
      "sessionId" : null,
      "code" : "pdfs",
      "extraFields" : { },
      "outputFormat" : "<h5 id=\"pdfs\" class=\"section\"><a href=\"#pdfs\" class=\"muted\"><small>#pdfs</small></a></h5>\n<hr>"
    }
  }, {
    "id" : 38,
    "compiler" : "heading4",
    "input" : {
      "sessionId" : null,
      "code" : "e.g. PDFs",
      "extraFields" : { },
      "outputFormat" : "<h4>e.g. PDFs</h4>"
    }
  }, {
    "id" : 39,
    "compiler" : "google_viewer",
    "input" : {
      "sessionId" : null,
      "code" : "http://www.riedelcastro.org//publications/papers/riedel13relation.pdf",
      "extraFields" : { },
      "outputFormat" : "<iframe src=\"http://docs.google.com/viewer?url=http://www.riedelcastro.org//publications/papers/riedel13relation.pdf&amp;embedded=true\" style=\"width:800px; height:600px;\" frameborder=\"0\"></iframe>"
    }
  }, {
    "id" : 40,
    "compiler" : "section",
    "input" : {
      "sessionId" : null,
      "code" : "thanks",
      "extraFields" : { },
      "outputFormat" : "<h5 id=\"thanks\" class=\"section\"><a href=\"#thanks\" class=\"muted\"><small>#thanks</small></a></h5>\n<hr>"
    }
  }, {
    "id" : 41,
    "compiler" : "heading1",
    "input" : {
      "sessionId" : null,
      "code" : "Thanks!",
      "extraFields" : {
        "fragment" : "true"
      },
      "outputFormat" : "<h1>Thanks!</h1>"
    }
  } ],
  "config" : {
    "autosave" : "false"
  }
}
